extend type Query @guard(with: ["api"]) {
    roles: [Role!]! @all(model: "Spatie\\Permission\\Models\\Role")
    role(id: ID @eq): Role @find(model: "Spatie\\Permission\\Models\\Role")
    permissions: [Permission!]! @all(model: "Spatie\\Permission\\Models\\Permission")
}

extend type Mutation @guard(with: ["api"]) {
    createRole(input: CreateRoleInput! @spread): Role!
    updateRole(input: UpdateRoleInput! @spread): Role!
    deleteRole(id: ID!): Role! @delete(model: "Spatie\\Permission\\Models\\Role")
}

type Role {
    id: ID!
    name: String!
    guard_name: String!
    created_at: DateTime!
    updated_at: DateTime!
    permissions: [Permission!]! @belongsToMany
}

type Permission {
    id: ID!
    name: String!
    guard_name: String!
    created_at: DateTime!
    updated_at: DateTime!
}

input CreateRoleInput @validator {
    name: String!
    permissions: [ID!]
}

input UpdateRoleInput @validator {
    id: ID!
    name: String!
    permissions: [ID!]
}