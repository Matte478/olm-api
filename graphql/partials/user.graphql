extend type Query @guard(with: ["api"]) {
    users: [User!]!
        @can(ability: "show")
        @softDeletes
        @paginate(type: "paginator")
    user(id: ID @eq): User
        @can(ability: "show")
        @softDeletes
        @find
    me: User @auth
}

extend type Mutation @guard(with: ["api"]) {
    updateUser(input: UpdateUserInput! @spread): User!
        @can(ability: "update")
    deleteUser(id: ID!): User!
        @can(ability: "delete")
        @delete
    restoreUser(id: ID!): User!
        @can(ability: "delete")
        @restore
    updateProfile(input: UpdateProfileInput! @spread): User!
}

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    deleted_at: DateTime
    roles: [Role!]! @hasMany
#    permissions: [Permission!]! @hasMany
    permissionsList: [String!]!
}

input UpdateUserInput @validator {
    id: ID!
    name: String!
    email: String!
    roles: [String]
}

input UpdateProfileInput @validator {
    name: String!
    email: String!
}
